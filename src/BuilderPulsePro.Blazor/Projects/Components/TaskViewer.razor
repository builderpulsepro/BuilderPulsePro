@using BuilderPulsePro.Enums
@using BuilderPulsePro.Projects
@using Volo.Abp.Guids
@inherits BuilderPulseProComponentBase
@inject IGuidGenerator GuidGenerator

<Row Margin="Margin.Is1.FromBottom">
	<Column>
		<Dropdown Display="Display.InlineBlock" Margin="Margin.Is1.FromEnd">
			<DropdownToggle Color="Color.Primary" Size="Size.Medium">
				@L["ProjectTask:AddTask"]
			</DropdownToggle>
			<DropdownMenu>
				@foreach (ProjectTaskType taskType in Enum.GetValues(typeof(ProjectTaskType)))
				{
					<DropdownItem Clicked="() => AddTaskAsync(taskType)">@taskType.ToString()</DropdownItem>
				}
			</DropdownMenu>
		</Dropdown>
		<Dropdown Display="Display.InlineBlock">
			<DropdownToggle Color="Color.Primary" Size="Size.Medium">
				@L["ProjectTask:AddAppointment"]
			</DropdownToggle>
			<DropdownMenu>
				@foreach (ProjectTaskType taskType in Enum.GetValues(typeof(ProjectTaskType)))
				{
					<DropdownItem Clicked="() => AddTaskAsync(taskType, true)">@taskType.ToString()</DropdownItem>
				}
			</DropdownMenu>
		</Dropdown>
	</Column>
	<Column TextAlignment="TextAlignment.End">
		<Label>@L["ProjectTask:View"]</Label>
		<RadioGroup TValue="string" Name="viewmode" Buttons Color="Color.Primary" CheckedValue="@ViewMode" CheckedValueChanged="ViewModeChanged">
			<Tooltip Text="@L["ProjectTask:ListView"]">
				<Radio Value="@("list")"><Icon Name="IconName.List"></Icon></Radio>
			</Tooltip>
			<Tooltip Text="@L["ProjectTask:ScheduleView"]">
				<Radio Value="@("schedule")"><Icon Name="IconName.Calendar" IconStyle="IconStyle.Regular"></Icon></Radio>
			</Tooltip>
		</RadioGroup>

		@* <Label Display="Display.InlineBlock" Margin="Margin.Is1.FromStart">Filter:</Label>
		<Dropdown Display="Display.InlineFlex">
			<DropdownToggle Color="Color.Primary" Size="Size.Medium" Style="padding-top:0.6rem; padding-bottom: 0.8rem;">
				<Icon Name="IconName.Filter"></Icon>
			</DropdownToggle>
			<DropdownMenu>
				<DropdownHeader>Status:</DropdownHeader>
				<DropdownItem ShowCheckbox>Planned</DropdownItem>
				<DropdownItem ShowCheckbox>Gathering Estimates</DropdownItem>
				<DropdownItem ShowCheckbox>Bid Accepted</DropdownItem>
				<DropdownItem ShowCheckbox>Scheduled</DropdownItem>
				<DropdownItem ShowCheckbox>In Progress</DropdownItem>
				<DropdownItem ShowCheckbox>Completed</DropdownItem>
			</DropdownMenu>
		</Dropdown> *@
	</Column>
</Row>

@if (ViewMode == "list")
{
	<DataGrid @ref="DataGrid"
			  TItem="CreateUpdateProjectTaskDto"
			  Data="Tasks"
			  RowClicked="RowClicked">
		<DataGridColumns>
			<DataGridColumn TItem="CreateUpdateProjectTaskDto" Caption="Title">
				<DisplayTemplate>
					@(context.Title)
				</DisplayTemplate>
			</DataGridColumn>
			<DataGridColumn TItem="CreateUpdateProjectTaskDto" Caption="Type">
				<DisplayTemplate>
					@(context.TaskType)
				</DisplayTemplate>
			</DataGridColumn>
			<DataGridEntityActionsColumn TItem="CreateUpdateProjectTaskDto" PreventRowClick="true">
				<DisplayTemplate>
					<Div @onclick:stopPropagation="true">
						<EntityActions TItem="CreateUpdateProjectTaskDto">
							<EntityAction TItem="CreateUpdateProjectTaskDto" Clicked="() => Delete(context)" Text="@L["Site:Delete"]"></EntityAction>
						</EntityActions>
					</Div>
				</DisplayTemplate>
			</DataGridEntityActionsColumn>
		</DataGridColumns>
	</DataGrid>
}
else if (ViewMode == "schedule") 
{
	<TaskScheduleView Tasks="Tasks" Project="Project" />
}

<EditTaskModal @ref=EditTaskModal Saved="ProjectTaskSaved" Tasks="Tasks" Project="Project" />