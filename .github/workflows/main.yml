# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Main

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          include-prerelease: true

      - name: Install ABP CLI
        run: |
          dotnet tool install -g Volo.Abp.Cli --version 8.3.4
          abp install-libs
        shell: bash
    
      - name: Build with dotnet
        run: dotnet build --configuration Release

      # - name: Add DBMigrator appsettings.keys.json
      #   run: echo "${{ secrets.DBMIGRATOR_KEYSJSON_DEV }}" > ./src/appsettings.keys.json

      # - name: Run migrations
      #   run: dotnet run -- "${{ secrets.CONNECTION_STRING }}" # Set your connection string as a secret in your repository settings
      #   working-directory: ./src/BuilderPulsePro.DbMigrator  # Replace with your project name

      - name: dotnet publish authserver
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/authserver
        working-directory: ./src/BuilderPulsePro.AuthServer # Replace with your project name

      - name: Generate authserver.pfx
        run: dotnet dev-certs https -v -ep ${{env.DOTNET_ROOT}}/authserver/openiddict.pfx -p a84eebb8-a184-4d23-982d-487d3ae2a667 # Replace with your password

      - name: Create appsettings.keys.json
        id: create-json
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "appsettings.authkeysplaceholder.json"
          json: ${{ secrets.AUTHSERVER_KEYSJSON_DEV }}

      - name: Verify File Content
        run: |
          if [ -s "/home/runner/work/BuilderPulsePro/BuilderPulsePro/appsettings.authkeysplaceholder.json" ]; then
            echo "File created successfully and is not empty."
            head -n 5 "/home/runner/work/BuilderPulsePro/BuilderPulsePro/appsettings.authkeysplaceholder.json" | sed 's/./*/g'
          else
            echo "File is empty or was not created."
            exit 1
          fi

      - name: Rename  appsettings.keys.json
        run: mv /home/runner/work/BuilderPulsePro/BuilderPulsePro/appsettings.authkeysplaceholder.json ${{ env.DOTNET_ROOT }}/authserver/appsettings.keys.json
          
      - name: dotnet publish apihost
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/apihost
        working-directory: ./src/BuilderPulsePro.HttpApi.Host # Replace with your project name

      - name: Create appsettings.keys.json
        id: create-json
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "appsettings.apihostkeysplaceholder.json"
          json: ${{ secrets.APIHOST_KEYSJSON_DEV }}

      - name: Verify File Content
        run: |
          if [ -s "/home/runner/work/BuilderPulsePro/BuilderPulsePro/appsettings.apihostkeyssplaceholder.json" ]; then
            echo "File created successfully and is not empty."
            head -n 5 "/home/runner/work/BuilderPulsePro/BuilderPulsePro/appsettings.apihostkeysplaceholder.json" | sed 's/./*/g'
          else
            echo "File is empty or was not created."
            exit 1
          fi

      - name: Rename  appsettings.keys.json
        run: mv /home/runner/work/BuilderPulsePro/BuilderPulsePro/appsettings.apihostkeysplaceholder.json ${{ env.DOTNET_ROOT }}/apihost/appsettings.keys.json

      - name: dotnet publish webapp
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/webapp
        working-directory: ./src/BuilderPulsePro.Blazor # Replace with your project name

      - name: Create appsettings.keys.json
        id: create-json
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "appsettings.webappkeysplaceholder.json"
          json: ${{ secrets.WEBAPP_KEYSJSON_DEV }}

      - name: Verify File Content
        run: |
          if [ -s "/home/runner/work/BuilderPulsePro/BuilderPulsePro/appsettings.webappkeyssplaceholder.json" ]; then
            echo "File created successfully and is not empty."
            head -n 5 "/home/runner/work/BuilderPulsePro/BuilderPulsePro/appsettings.webappkeysplaceholder.json" | sed 's/./*/g'
          else
            echo "File is empty or was not created."
            exit 1
          fi

      - name: Rename  appsettings.keys.json
        run: mv /home/runner/work/BuilderPulsePro/BuilderPulsePro/appsettings.webappkeysplaceholder.json ${{ env.DOTNET_ROOT }}/publicweb/appsettings.keys.json

      #- name: dotnet publish publicweb
      #  run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/publicweb
      #  working-directory: ./src/BuilderPulsePro.Web.Public # Replace with your project name
        
      #- name: Add PublicWeb appsettings.keys.json
      #  run: |
      #    dotnet new file --name "${{env.DOTNET_ROOT}}/publicweb/appsettings.keys.json" --content "${{ secrets.PUBLICWEB_KEYSJSON_DEV }}"

      - name: Upload artifact for authserver
        uses: actions/upload-artifact@v4
        with:
          name: .net-authserver
          path: ${{env.DOTNET_ROOT}}/authserver
      
      - name: Upload artifact for apihost
        uses: actions/upload-artifact@v4
        with:
          name: .net-apihost
          path: ${{env.DOTNET_ROOT}}/apihost

      - name: Upload artifact for webapp
        uses: actions/upload-artifact@v4
        with:
          name: .net-webapp
          path: ${{env.DOTNET_ROOT}}/webapp

      #- name: Upload artifact for publicweb
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: .net-publicweb
      #     path: ${{env.DOTNET_ROOT}}/publicweb

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp-3.outputs.webapp-url }}

    steps:
      - name: Download artifact from authserver
        uses: actions/download-artifact@v4
        with:
          name: .net-authserver
          path: ./authserver

      - name: Deploy authserver
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'BuilderPulsePro-Dev-Auth' # Replace with your app name
          slot-name: 'Production'
          publish-profile: ${{ secrets.authserverblazorserverPublishSettings }} # Set your Azure Web App to publish your profile as a secret in your repository settings
          package: ./authserver

      - name: Download artifact from apihost
        uses: actions/download-artifact@v4
        with:
          name: .net-apihost
          path: ./apihost

      - name: Deploy apihost
        id: deploy-to-webapp-2
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'BuilderPulsePro-Dev-Api' # Replace with your app name
          slot-name: 'Production'
          publish-profile: ${{ secrets.apihostblazorserverPublishSettings }} # Set your Azure Web App to publish your profile as a secret in your repository settings
          package: ./apihost

      - name: Download artifact from webapp
        uses: actions/download-artifact@v4
        with:
          name: .net-webapp
          path: ./webapp

      - name: Deploy webapp
        id: deploy-to-webapp-3
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'BuilderPulsePro-dev' # Replace with your app name
          slot-name: 'Production'
          publish-profile: ${{ secrets.webappblazorserverPublishSettings }} # Set your Azure Web App publish your profile as a secret in your repository settings
          package: ./webapp

      #- name: Download artifact from public web
      #  uses: actions/download-artifact@v4
      #  with:
      #    name: .net-publicweb
      #    path: ./publicweb

      #- name: Deploy public web
      #  id: deploy-to-webpublic-4
      #  uses: azure/webapps-deploy@v3
      #  with:
      #    app-name: 'BuilderPulsePro-Dev-PublicWeb' # Replace with your app name
      #    slot-name: 'Production'
      #    publish-profile: ${{ secrets.publicwebblazorserverPublishSettings }} # Set your Azure Web App publish your profile as a secret in your repository settings
      #    package: ./publicweb
